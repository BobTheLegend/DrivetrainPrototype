// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
import edu.wpi.first.wpilibj.Joystick;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drivetrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    double Ldeadband = .15;
    double Rdeadband = .15;
    


    public Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new DumbDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
        setDefaultCommand(new DumbDrive());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void dumbDrive(Joystick leftJoystick, Joystick rightJoystick) {
        double leftPos = leftJoystick.getY();
        double rightPos = rightJoystick.getY();
        double leftAmount;
        double rightAmount;

        if((Math.abs(leftPos) <= Ldeadband)) {
            leftAmount = 0; 
        }
        else{
            leftAmount = (1/(1 - Ldeadband) * Math.abs(leftPos) - (Ldeadband/(1 - Ldeadband)));
        }

        if(leftPos < 0) {
           leftAmount = -1 * leftAmount;
        }

        if((Math.abs(rightPos) <= Rdeadband) || (rightPos == 0)) {
            rightAmount = 0; 
        }
        else{
            rightAmount = (1/(1 - Rdeadband) * Math.abs(rightPos) - (Rdeadband/(1 - Rdeadband)));
        }
        if(rightPos < 0) {
            rightAmount = -1 * rightAmount;
         }

         //TODO Give value to motors
    }

    /*public void stop() {
        talonLeft.set(0);
        talonRight.set(0);
    }*/

}

